/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package report;

import entity.Arti;
import entity.Best;
import entity.Kund;
import gui.WaWiMainGUI;
import java.util.Iterator;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Markus
 */
public class ReportMainGUI extends javax.swing.JFrame {

    List result;
    DefaultTableModel model;

    /**
     * Creates new form ReportGUI
     */
    public ReportMainGUI() {
        initComponents();
        this.model = (DefaultTableModel) tableAusgabe.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelReports = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();
        buttonShowArticlelist = new javax.swing.JButton();
        buttonShowOpenOrders = new javax.swing.JButton();
        buttonShowBestellvolumen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAusgabe = new javax.swing.JTable();
        buttonShowCritStock = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelReports.setText("Reports");

        buttonBack.setText("Zurück");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        buttonShowArticlelist.setText("Artikel und Bestände");
        buttonShowArticlelist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowArticlelistActionPerformed(evt);
            }
        });

        buttonShowOpenOrders.setText("Offene Bestellungen");
        buttonShowOpenOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowOpenOrdersActionPerformed(evt);
            }
        });

        buttonShowBestellvolumen.setText("Bestellvolumen");
        buttonShowBestellvolumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowBestellvolumenActionPerformed(evt);
            }
        });

        tableAusgabe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableAusgabe);

        buttonShowCritStock.setText("Kritische Bestandsmengen");
        buttonShowCritStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowCritStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonBack)
                        .addGap(54, 54, 54)
                        .addComponent(labelReports))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(buttonShowBestellvolumen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonShowOpenOrders, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonShowArticlelist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonShowCritStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonBack)
                            .addComponent(labelReports))
                        .addGap(26, 26, 26)
                        .addComponent(buttonShowArticlelist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonShowOpenOrders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonShowBestellvolumen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonShowCritStock))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        labelReports.getAccessibleContext().setAccessibleName("labelReports");
        buttonBack.getAccessibleContext().setAccessibleName("buttonBack");
        buttonShowArticlelist.getAccessibleContext().setAccessibleName("buttonShowArtikelliste");
        buttonShowOpenOrders.getAccessibleContext().setAccessibleName("buttonBestellungen");
        buttonShowBestellvolumen.getAccessibleContext().setAccessibleName("buttonShowBestellvolumen");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        setVisible(false);
        WaWiMainGUI wawiGUI = new WaWiMainGUI();
        wawiGUI.setVisible(true);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonShowArticlelistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowArticlelistActionPerformed
        String[] columnnames = {"Artikelnummer ", "Bezeichnung"};

        setColumnnames(columnnames);
        result = connect("From Arti");

        Object rowData[] = new Object[3];

        for (Iterator iterator = result.iterator(); iterator.hasNext();) {
            Arti Artikel = (Arti) iterator.next();
            rowData[0] = Artikel.getANR();
            rowData[1] = Artikel.getBEZEICHNUNG();
            rowData[2] = Artikel.getBESTANDSMENGE();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_buttonShowArticlelistActionPerformed

    private List connect(String statement) {
        database.DB_Connect con = new database.DB_Connect();
        return con.Connect(statement);
    }

    private void setColumnnames(String[] names) {
        DefaultTableModel model = (DefaultTableModel) tableAusgabe.getModel();
        model.setColumnIdentifiers(names);
        model.setRowCount(0);
    }

    private void buttonShowOpenOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowOpenOrdersActionPerformed
        String[] columnnames = {"BNR ", "BESTELLDATUM", "STATUS"};
        setColumnnames(columnnames);
        result = connect("FROM Best where status = 'offen' order by BNR");
        Object rowData[] = new Object[3];
        
        for (Iterator iterator = result.iterator(); iterator.hasNext();) {
            Best Bestellung = (Best) iterator.next();
            
            rowData[0] = Bestellung.getBNR();
            rowData[1] = Bestellung.getBESTELLDATUM();
            rowData[2] = Bestellung.getSTATUS();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_buttonShowOpenOrdersActionPerformed

    private void buttonShowBestellvolumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowBestellvolumenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonShowBestellvolumenActionPerformed

    private void buttonShowCritStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowCritStockActionPerformed
        String[] columnnames = {"Artikelnummer ", "Bezeichnung", "Bestandsmenge", "Krit_Menge"};
        setColumnnames(columnnames);
        result = connect("From Arti WHERE BESTANDSMENGE <= KRIT_MENGE");

        Object rowData[] = new Object[4];

        for (Iterator iterator = result.iterator(); iterator.hasNext();) {
            Arti Artikel = (Arti) iterator.next();
            rowData[0] = Artikel.getANR();
            rowData[1] = Artikel.getBEZEICHNUNG();
            rowData[2] = Artikel.getBESTANDSMENGE();
            rowData[3] = Artikel.getKrit_Menge();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_buttonShowCritStockActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportMainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonShowArticlelist;
    private javax.swing.JButton buttonShowBestellvolumen;
    private javax.swing.JButton buttonShowCritStock;
    private javax.swing.JButton buttonShowOpenOrders;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelReports;
    private javax.swing.JTable tableAusgabe;
    // End of variables declaration//GEN-END:variables
}
